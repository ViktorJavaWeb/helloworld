import java.lang.Math;



public class Lesson3 {

   /* 1. Создать программу, проверяющую и сообщающую на экран, является ли целое число записанное в переменную
    n, чётным либо нечётным.*/

    public static void oneTask() {

        //первый вариант
        int t = 19;
        String m;
        if(t%2==0){
            m = "четное";
        }else {
            m = "нечетное";
        }
        System.out.println("Число (" + t + ") - " + m);

        //второй вариант
        //System.out.println(t%2==0 ? "Number 1" : "Number 2");
    }

     /*2. Создать программу, выводящую на экран ближайшее к 10 из двух чисел, записанных
        в переменные m и n. Например, среди чисел 8,5 и 11,45 ближайшее к десяти 11,45.*/

    public static void twoTask() {

        double i = 10.2;
        double o = 11.2;
        double h = 10, y, u, m5 = 0;

        if ((y = h - i)<0){
            y = -y;
        };
        if((u = h - o) < 0){
            u = -u;
        };
        System.out.println(y < u ? i : o);

        //System.out.println((h - i) % h > (h - o) % h ? i : o);
        System.out.println("Y(i) - " + y);
        System.out.println("U(o) - " + u);

    }

    /*3. В три переменные a, b и c записаны три вещественных числа.Создать программу, которая будет находить
        и выводить на экран вещественные корни квадратного уравнения ax^2+bx + c = 0, либо сообщать, что корней нет.*/

               /* Если разделить все члены неприведенного квадратного уравнения на  a ( это возможно? ),
               и обозначить  b / a = p  и  c / a = q , то мы получим приведенное квадратное уравнение:
                x 2 + px + q = 0 , корни которого вычисляются по формуле:*/



    public static void threeTask(){
        double a = 2, x1, x2, b = 5, c = -3, p, q, w;

        p = b/a;
        q = c/a;

        w = Math.sqrt(((p/2)*(p/2))-q);
        x1 = -p/2+w;
        x2 = -p/2-w;

        System.out.println("Значение x1 - " + x1);
        System.out.println("\t   Значение x2 - " + x2);

    }

        /*4. Создать программу, которая будет проверять попало ли случайно выбранное из отрезка[ 5;155]целое число
        в интервал (25; 100)и сообщать результат на экран.*/


    public static void fourTask() {
        int min = 5, max = 157, n;
        max -= min;
        n = (int)(Math.random() * ++max) + min;
        System.out.println(n);

        //    Примеры работы программы:

        /*Число 113 не содержится в интервале (25, 100)*/

        /*Число 72 содержится в интервале(25, 100)*/

        /*Число 25 не содержится в интервале (25, 100)*/

        /*Число 155 не содержится в интервале (25, 100)*/
    }



         /*5. Создайте программу, выводящую на экран первые 55 элементов последовательности 1 3 5 7 9 11 13 15 17….;*/

    public static void fiveTask(){


    }





       /* 6. В городе N проезд в трамвае осуществляется по бумажным отрывным билетам. Каждую неделю трамвайное
        депо заказывает в местной типографии рулон билетов с номерами от 000001 до 999999. «Счастливым» считается
        билетик у которого сумма первых трёх цифр номера равна сумме последних трёх цифр, как, например, в билетах
        с номерами 003102 или 567576. Трамвайное депо решило подарить сувенир обладателю каждого счастливого билета
        и теперь раздумывает, как много сувениров потребуется. С помощью программы подсчитайте сколько счастливых
        билетов в одном рулоне?*/


    public static void sixTask() {

        int c = -1; /*????? ?????????? ????? 000000}*/
        for (int x1 = 0; x1 < 10; x1++)
            for (int x2 = 0; x2 < 10; x2++)
                for (int x3 = 0; x3 < 10; x3++)
                    for (int x4 = 0; x4 < 10; x4++)
                        for (int x5 = 0; x5 < 10; x5++)
                            for (int x6 = 0; x6 < 10; x6++)
                                if (x1 + x2 + x3 == x4 + x5 + x6) c++;
        System.out.println(c);
    }

        /*7. Электронные часы показывают время в формате от 00:00 до 23:59. Подсчитать
        сколько раз за сутки случается так, что слева от двоеточия показывается симметричная
        комбинация для той, что справа от двоеточия (например, 02:20, 11:11 или 15:51).*/

    public static void sevenTask() {

            int c1 = -1;
            for (int x1 = 0; x1 < 2; x1++)
                for (int x2 = 0; x2 < 10; x2++)
                    for (int x3 = 0; x3 < 6; x3++)
                        for (int x4 = 0; x4 < 10; x4++)
                            if (x1 + x2 == x3 + x4) c1++;
            System.out.println(c1);

        }


}